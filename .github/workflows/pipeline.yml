# The name of the workflow.
name: Build and Deploy

# Run the workflow when code is pushed to the main branch
on:
  push:
    branches:
      - main

# Set environment variables
env:
  PORT: ${{ vars.PORT }}
  MONGO_DB: ${{ vars.MONGO_DB }}
  ACCESS_TOKEN: ${{ vars.ACCESS_TOKEN }}
  REFRESH_TOKEN: ${{ vars.REFRESH_TOKEN }}
  CLIENT_ID: ${{ vars.CLIENT_ID }}
  MAIL_PASSWORD: ${{ vars.MAIL_PASSWORD }}
  MAIL_ACCOUNT: ${{ vars.MAIL_ACCOUNT }}
# This is the workflow that is being run.
jobs:
  build-and-deploy:
    # This is telling GitHub to run the workflow on the latest version of Ubuntu.
    runs-on: ubuntu-latest
    steps:

      # Checkout the code from the GitHub repository
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Create .env file
        run: echo "PORT=$PORT\nMONGO_DB=$MONGO_DB\nACCESS_TOKEN=$ACCESS_TOKEN\nREFRESH_TOKEN=$REFRESH_TOKEN\nCLIENT_ID=$CLIENT_ID\nMAIL_PASSWORD=$MAIL_PASSWORD
             MAIL_ACCOUNT=$MAIL_ACCOUNT" > .env

      # Login to Docker Hub using credentials from repository secrets
      - name: Login to Docker Hub
        run: docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_TOKEN }}  


      # Build a Docker image for the server application
      - name: Build Server Docker Image
          # Build image with tag ollah/ecomerce:server
        run: |
          docker build -t ollah/ecomerce:server-${{github.run_number}} .



      # Push the Docker images to Docker Hub
      - name: Push Docker Images to Docker Hub
        run:
          docker push ollah/ecomerce:server-${{github.run_number}}
   # Job 2: Deploy to server
      - name: Deploy to server
       # Use "appleboy/ssh-action" to deploy the image to the server via SSH
        uses: appleboy/ssh-action@v0.1.3
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            # Pull the image that was pushed to DockerHub above
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/ecomerce:server-${{github.run_number}}

            # Stop and remove the current container (if any)
            docker stop ecomerce-server
            docker rm ecomerce-server

            # Run a new container with the image pulled above
            docker run -d -p 3001:3001 --name ecomerce-server ${{ secrets.DOCKERHUB_USERNAME }}/ecomerce:server-${{github.run_number}}